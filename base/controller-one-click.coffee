###
# One touch event handler. This clase provides simple access to create an event handler for detect click in the sccene it is added.
# @usage
#          var clickHandler = new ClickScene( );
#          clickHandler.on( 'click', this.onClick, this );
#          this.addChild( clickHandler ); // must be added to scene
# @autor Maximo Rosales
###

@ClickScene = cc.Node.extend(
  _clickListener: null
  state: null
  ctor: ->
    @_super()
    @state = ClickScene.ACTION_NONE
    # binding all function in fn
    @fn.onTouchBegan = @fn.onTouchBegan.bind(this)
    @fn.onTouchMoved = @fn.onTouchMoved.bind(this)
    @fn.onTouchEnded = @fn.onTouchEnded.bind(this)
    @_clickListener = cc.EventListener.create(@fn)
    return
  fn:
    event: cc.EventListener.TOUCH_ONE_BY_ONE
    swallowTouches: true
    onTouchBegan: (touch, event) ->
      @state = ClickScene.ACTION_CLICK_DOWN
      true
    onTouchMoved: (touch, _event) ->
    onTouchEnded: (touch, _event) ->
      @state = ClickScene.ACTION_NONE
      @_on_click touch, _event
      return
  on: (eventName, fn, context) ->
    if @['_on_' + eventName]
      if context
        @['_on_' + eventName] = fn.bind(context)
      else
        @['_on_' + eventName] = fn
    return
  _on_click: (touch, _event) ->
    cc.error 'no event registered use: clickHandler.on( \'click\', this.onClick, this )'
    return
  onEnter: ->
    @_super()
    cc.eventManager.addListener @_clickListener, @parent
    return
)
# Constants
i = 0
@ClickScene.ACTION_NONE = ++i
@ClickScene.ACTION_CLICK_DOWN = ++i

# ---
# generated by js2coffee 2.1.0